factory: form
name: sharingbox_add_edit
props:
    action: expr:context.action
    class: edit-form enableUnloadProtection
widgets:

- features:
    factory: fieldset
    widgets:

    - is_thread:
        factory: field:label:checkbox
        value: expr:context.is_thread
        props:
            label: Thread
            help: I want to create a thread...
            help_class: formHelp

    - is_event:
        factory: field:label:checkbox
        value: expr:context.is_event
        props:
            label: Event
            help: I want to create an event...
            help_class: formHelp

    - is_location:
        factory: field:label:checkbox
        value: expr:context.is_location
        props:
            label: Location
            help: I want to add location...
            help_class: formHelp

    - is_organizer:
        factory: field:label:checkbox
        value: expr:context.is_organizer
        props:
            label: Location
            help: I want to add an organizer...
            help_class: formHelp

- features-title:
    factory: fieldset
    widgets:
    - title:
        factory: field:label:error:text
        value: expr:context.get('title', 'features-title')
        props:
            label: Title

- features-text:
    factory: fieldset
    widgets:
    - text:
        factory: field:label:error:textarea
        value: expr:context.get('text', 'features-text')
        props:
            label: Text
            help: Share some content with us!
            help_class: formHelp
            rows: 5

- features-event:
    factory: fieldset
    widgets:
    - start:
        factory: field:label:error:datetime
        value: expr:context.get('start', 'features-event')
        props:
            label: Start Date and Time
            help: Date and Time, when the Event begins. E.g. 10.10.2010 10:00
            help_class: formHelp
            format: '%d.%m.%Y %H:%M'
            datepicker: True,
            time: True

    - end:
        factory: field:label:error:datetime
        value: expr:context.get('end', 'features-event')
        props:
            label: End Date and Time
            help: Date and Time, when the Event ends. E.g. 10.10.2010 11:00. It's the single's event end, not of a recurrence, if one is defined.
            help_class: formHelp
            format: '%d.%m.%Y %H:%M'
            datepicker: True,
            time: True

    - whole_day:
        factory: field:label:error:checkbox
        value: expr:context.get('whole_day', 'features-event')
        props:
            label: Whole Day
            help: The event lasts the whole day. Start and end times are not used.
            help_class: formHelp

    - recurrence:
        factory: field:label:error:textarea
        value: expr:context.get('recurrence', 'features-event')
        props:
            label: Recurrence
            help: This event has a recurrence rule.
            help_class: formHelp
            rows: 2

- features-location:
    factory: fieldset
    widgets:
    - location:
        factory: field:label:error:textarea
        value: expr:context.get('location', 'features-location')
        props:
            label: Location
            help: The location of this event.
            help_class: formHelp
            rows: 3

- features-organizer:
    factory: fieldset
    widgets:
    - organizer:
        factory: field:label:error:textarea
        value: expr:context.get('organizer', 'features-organizer')
        props:
            label: Organizer
            help: The organizer of this event.
            help_class: formHelp
            rows: 3

- form-controls:
    factory: fieldset
    widgets:
    - save:
        factory: submit
        props:
            action: save
            expression: True
            handler: context.save
            next: context.next
            label: Save
