factory: form
name: sharingbox_add_edit
props:
    action: expr:context.action
    class: edit-form enableUnloadProtection
widgets:


- features:
    factory: fieldset
    props:
        structural: True
        class: sharingbox-features
    widgets:

    - is_thread:
        factory: field:label:checkbox
        value: expr:context.get('is_thread')
        props:
            label: Thread
            label.class: icon-star-empty
            label.title: I want to create a thread...
            class: field sharingbox-feature-thread

    - is_event:
        factory: field:label:checkbox
        value: expr:context.get('is_event')
        props:
            label: Event
            label.class: icon-time
            label.title: I want to create an event...
            class: field sharingbox-feature-event

    - is_place:
        factory: field:label:checkbox
        value: expr:context.get('is_place')
        props:
            label: Place
            label.class: icon-map-marker
            label.title: I want to add a place...
            class: field sharingbox-feature-place


- features-base:
    factory: fieldset
    props:
        structural: True
        class: sharingbox-base
    widgets:

    - title:
        factory: field:error:text
        value: expr:context.get('title')
        props:
            placeholder: Titel
            title: Titel


    - text:
        factory: field:error:wysihtml5
        value: expr:context.get('text')
        props:
            placeholder: Text
            title: Share some content with us!
            rows: 5
            focus: True
            resize: True
            size: mini
            stylesheet: ++resource++g24.elements/views.css
            color: True
            emphasis: True
            font-styles: True
            html: True
            image: True
            justify: True
            link: True
            lists: True

    - subjects:
        factory: field:label:error:select2
        value: expr:context.get('subjects')
        props:
            label: Tags
            label.title: Tag the content with categories, so that it can be better found.
            rows: 4
            cols: 10
            class: select2
            placeholder: 'Select some tags'
            vocabulary: expr:context.vocabulary_keywords
            multiple: 'multiple'
            allowClear: True,

- features-event:
    factory: fieldset
    props:
        structural: True
        class: sharingbox-feature-event
    widgets:
    - start:
        factory: field:label:error:datetime
        value: expr:context.get('start')
        props:
            label: Start Date and Time
            label.title: Date and Time, when the Event begins. E.g. 10.10.2010 10:00
            format: '%Y-%m-%d %H:%M'
            datepicker: True,
            time: True

    - end:
        factory: field:label:error:datetime
        value: expr:context.get('end')
        props:
            label: End Date and Time
            label.title: Date and Time, when the Event ends. E.g. 10.10.2010 11:00. It's the single's event end, not of a recurrence, if one is defined.
            format: '%Y-%m-%d %H:%M'
            datepicker: True,
            time: True

    - whole_day:
        factory: field:label:error:checkbox
        value: expr:context.get('whole_day')
        props:
            label: Whole Day
            label.title: The event lasts the whole day. Start and end times are not used.

    - timezone:
        factory: field:label:error:select2
        value: expr:context.get('timezone')
        props:
            label: Timezone
            label.title: The timezone, this event happens.
            class: select2
            placeholder: 'Select the timezone'
            vocabulary: expr:context.vocabulary_timezones
            allowClear: True,

    - recurrence:
        factory: field:label:error:textarea
        value: expr:context.get('recurrence')
        props:
            label: Recurrence
            label.title: This event has a recurrence rule.
            rows: 2

    - location:
        factory: field:label:error:select2
        value: expr:context.get('location')
        props:
            label: Location
            label.title: The place where the event happens.
            class: select2
            placeholder: 'Select the location'
            vocabulary: expr:context.vocabulary_locations
            allowClear: True,


- form-controls:
    factory: fieldset
    props:
        structural: True
        class: sharingbox-controls
    widgets:
    - save:
        factory: submit
        props:
            action: save
            expression: True
            handler: context.save
            next: context.next
            label: Save
            class: btn

    - cancel:
        factory: submit
        props:
            action: False
            expression: True
            skip: True
            next: context.next
            label: Cancel
            class: btn
